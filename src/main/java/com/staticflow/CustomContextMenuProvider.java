package main.java.com.staticflow;

import burp.api.montoya.core.BurpSuiteEdition;
import burp.api.montoya.core.ToolType;
import burp.api.montoya.ui.contextmenu.ContextMenuEvent;
import burp.api.montoya.ui.contextmenu.ContextMenuItemsProvider;
import burp.api.montoya.ui.contextmenu.InvocationType;
import javax.swing.*;
import java.awt.*;
import java.util.Collections;
import java.util.List;

/**
 * This class provides an implementation of a {@link ContextMenuItemsProvider} which handles when to display
 * this extensions custom context menu. The two instances when the custom context menu is displayed are: <br>
 * 1. Repeater Request Tabs <br>
 * 2. Issue Activity List Items (For professional only) <br>
 * For more information of what happens when the context menu is selected, see {@link ContextMenuActionListener}
 */
public class CustomContextMenuProvider implements ContextMenuItemsProvider {
    //Reference to a custom Action Listener which fires when this extensions custom context menu is selected
    private final ContextMenuActionListener contextMenuActionListener;
    //Context Menu item added by this extension
    private final JMenuItem contextMenuItem;

    /**
     * Instantiate this class and configure the custom ActionListener and JMenuItem
     */
    public CustomContextMenuProvider() {
        contextMenuActionListener = new ContextMenuActionListener();
        contextMenuItem = new JMenuItem("New HackerOne Vulnerability Draft");
        contextMenuItem.addActionListener(contextMenuActionListener);
    }

    /**
     * This method determines when Burp Suite should display this extension's custom context menu.
     * The two instances when the custom context menu is displayed are: <br>
     *  * 1. Repeater Request Tabs <br>
     *  * 2. Issue Activity List Items (For professional only) <br>
     * @param contextMenuEvent {@link ContextMenuEvent} which provides details about the Burp Suite UI context when the user right-clicked
     * @return A list containing all custom context menus applicable to the provided Menu Context
     */
    @Override
    public List<Component> provideMenuItems(ContextMenuEvent contextMenuEvent) {
            if(
                //If the Burp Suite running this extension is a pro version and the right-click event happened on a Scanner Issue
                (ExtensionState.getInstance().getCallbacks().burpSuite().version().edition() == BurpSuiteEdition.PROFESSIONAL &&
                contextMenuEvent.isFrom(InvocationType.SCANNER_RESULTS) )
                // or the right-click event happened within a repeater tab
                || contextMenuEvent.isFromTool(ToolType.REPEATER)
            ) {
                //store the event and return this extension's custom context menu
                contextMenuActionListener.setLastContextMenuEvent(contextMenuEvent);
                return Collections.singletonList(contextMenuItem);
        }
        return null;
    }
}